{"ast":null,"code":"var _jsxFileName = \"/Users/nicholasbuscemi/Development/PortfolioProjects/JTTfoundation/frontend/src/Components/Stripe/Completion.js\",\n  _s = $RefreshSig$();\n/*function Completion(props) {\n    return <h1>Thank you! ðŸŽ‰</h1>;\n  }\n  \n  export default Completion;*/\n\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Completion(props) {\n  _s();\n  const [messageBody, setMessageBody] = useState('');\n  const {\n    stripePromise\n  } = props;\n  useEffect(() => {\n    if (!stripePromise) return;\n    stripePromise.then(async stripe => {\n      const url = new URL(window.location);\n      const clientSecret = url.searchParams.get('payment_intent_client_secret');\n      const {\n        error,\n        paymentIntent\n      } = await stripe.retrievePaymentIntent(clientSecret);\n      setMessageBody(error ? `> ${error.message}` : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"> Payment \", paymentIntent.status, \": \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: `https://dashboard.stripe.com/test/payments/${paymentIntent.id}`,\n          target: \"_blank\",\n          rel: \"noreferrer\",\n          children: paymentIntent.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 50\n        }, this)]\n      }, void 0, true));\n    });\n  }, [stripePromise]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Thank you!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"/\",\n      children: \"home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"messages\",\n      role: \"alert\",\n      style: messageBody ? {\n        display: 'block'\n      } : {},\n      children: messageBody\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(Completion, \"Hr91iCk1W0MajfbTPnHKAth6M1A=\");\n_c = Completion;\nexport default Completion;\nvar _c;\n$RefreshReg$(_c, \"Completion\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Completion","props","_s","messageBody","setMessageBody","stripePromise","then","stripe","url","URL","window","location","clientSecret","searchParams","get","error","paymentIntent","retrievePaymentIntent","message","children","status","href","id","target","rel","fileName","_jsxFileName","lineNumber","columnNumber","role","style","display","_c","$RefreshReg$"],"sources":["/Users/nicholasbuscemi/Development/PortfolioProjects/JTTfoundation/frontend/src/Components/Stripe/Completion.js"],"sourcesContent":["/*function Completion(props) {\n    return <h1>Thank you! ðŸŽ‰</h1>;\n  }\n  \n  export default Completion;*/\n\n  import {useEffect, useState} from 'react';\n\n  function Completion(props) {\n    const [ messageBody, setMessageBody ] = useState('');\n    const { stripePromise } = props;\n  \n    useEffect(() => {\n      if (!stripePromise) return;\n  \n      stripePromise.then(async (stripe) => {\n        const url = new URL(window.location);\n        const clientSecret = url.searchParams.get('payment_intent_client_secret');\n        const { error, paymentIntent } = await stripe.retrievePaymentIntent(clientSecret);\n  \n        setMessageBody(error ? `> ${error.message}` : (\n          <>&gt; Payment {paymentIntent.status}: <a href={`https://dashboard.stripe.com/test/payments/${paymentIntent.id}`} target=\"_blank\" rel=\"noreferrer\">{paymentIntent.id}</a></>\n        ));\n      });\n    }, [stripePromise]);\n  \n    return (\n      <>\n        <h1>Thank you!</h1>\n        <a href=\"/\">home</a>\n        <div id=\"messages\" role=\"alert\" style={messageBody ? {display: 'block'} : {}}>{messageBody}</div>\n      </>\n    );\n  }\n  \n  export default Completion;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEE,SAAQA,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1C,SAASC,UAAUA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACzB,MAAM,CAAEC,WAAW,EAAEC,cAAc,CAAE,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM;IAAEU;EAAc,CAAC,GAAGJ,KAAK;EAE/BP,SAAS,CAAC,MAAM;IACd,IAAI,CAACW,aAAa,EAAE;IAEpBA,aAAa,CAACC,IAAI,CAAC,MAAOC,MAAM,IAAK;MACnC,MAAMC,GAAG,GAAG,IAAIC,GAAG,CAACC,MAAM,CAACC,QAAQ,CAAC;MACpC,MAAMC,YAAY,GAAGJ,GAAG,CAACK,YAAY,CAACC,GAAG,CAAC,8BAA8B,CAAC;MACzE,MAAM;QAAEC,KAAK;QAAEC;MAAc,CAAC,GAAG,MAAMT,MAAM,CAACU,qBAAqB,CAACL,YAAY,CAAC;MAEjFR,cAAc,CAACW,KAAK,GAAI,KAAIA,KAAK,CAACG,OAAQ,EAAC,gBACzCrB,OAAA,CAAAE,SAAA;QAAAoB,QAAA,GAAE,YAAa,EAACH,aAAa,CAACI,MAAM,EAAC,IAAE,eAAAvB,OAAA;UAAGwB,IAAI,EAAG,8CAA6CL,aAAa,CAACM,EAAG,EAAE;UAACC,MAAM,EAAC,QAAQ;UAACC,GAAG,EAAC,YAAY;UAAAL,QAAA,EAAEH,aAAa,CAACM;QAAE;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,eAAE,CAC5K,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,EAAE,CAACvB,aAAa,CAAC,CAAC;EAEnB,oBACER,OAAA,CAAAE,SAAA;IAAAoB,QAAA,gBACEtB,OAAA;MAAAsB,QAAA,EAAI;IAAU;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnB/B,OAAA;MAAGwB,IAAI,EAAC,GAAG;MAAAF,QAAA,EAAC;IAAI;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACpB/B,OAAA;MAAKyB,EAAE,EAAC,UAAU;MAACO,IAAI,EAAC,OAAO;MAACC,KAAK,EAAE3B,WAAW,GAAG;QAAC4B,OAAO,EAAE;MAAO,CAAC,GAAG,CAAC,CAAE;MAAAZ,QAAA,EAAEhB;IAAW;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA,eACjG,CAAC;AAEP;AAAC1B,EAAA,CAzBQF,UAAU;AAAAgC,EAAA,GAAVhC,UAAU;AA2BnB,eAAeA,UAAU;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}