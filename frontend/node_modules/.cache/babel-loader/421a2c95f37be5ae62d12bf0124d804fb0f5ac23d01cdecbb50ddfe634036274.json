{"ast":null,"code":"// This is your test secret API key.\nconst stripe = require('stripe')('sk_test_51OMkaOKLJkCjclBY2OIyeYkStL2KQvwwLFsRc48w0do0LpARi2QV3S0VthmjqtQG3bLE2Ua5t1keeBOwpkmXaXTu00sTdsi2Vu');\nconst express = require('express');\nconst app = express();\napp.use(express.static('public'));\nconst YOUR_DOMAIN = 'http://localhost:3000';\napp.post('/create-checkout-session', async (req, res) => {\n  const session = await stripe.checkout.sessions.create({\n    ui_mode: 'embedded',\n    line_items: [{\n      // Provide the exact Price ID (for example, pr_1234) of the product you want to sell\n      price: '{{PRICE_ID}}',\n      quantity: 1\n    }],\n    mode: 'payment',\n    return_url: `${YOUR_DOMAIN}/return?session_id={CHECKOUT_SESSION_ID}`\n  });\n  res.send({\n    clientSecret: session.client_secret\n  });\n});\napp.get('/session-status', async (req, res) => {\n  const session = await stripe.checkout.sessions.retrieve(req.query.session_id);\n  res.send({\n    status: session.status,\n    customer_email: session.customer_details.email\n  });\n});\napp.listen(4242, () => console.log('Running on port 4242'));","map":{"version":3,"names":["stripe","require","express","app","use","static","YOUR_DOMAIN","post","req","res","session","checkout","sessions","create","ui_mode","line_items","price","quantity","mode","return_url","send","clientSecret","client_secret","get","retrieve","query","session_id","status","customer_email","customer_details","email","listen","console","log"],"sources":["/Users/nicholasbuscemi/Development/PortfolioProjects/JTTfoundation/frontend/src/Components/Stripe/PaymentForm.js"],"sourcesContent":["// This is your test secret API key.\nconst stripe = require('stripe')('sk_test_51OMkaOKLJkCjclBY2OIyeYkStL2KQvwwLFsRc48w0do0LpARi2QV3S0VthmjqtQG3bLE2Ua5t1keeBOwpkmXaXTu00sTdsi2Vu');\nconst express = require('express');\nconst app = express();\napp.use(express.static('public'));\n\nconst YOUR_DOMAIN = 'http://localhost:3000';\n\napp.post('/create-checkout-session', async (req, res) => {\n  const session = await stripe.checkout.sessions.create({\n    ui_mode: 'embedded',\n    line_items: [\n      {\n        // Provide the exact Price ID (for example, pr_1234) of the product you want to sell\n        price: '{{PRICE_ID}}',\n        quantity: 1,\n      },\n    ],\n    mode: 'payment',\n    return_url: `${YOUR_DOMAIN}/return?session_id={CHECKOUT_SESSION_ID}`,\n  });\n\n  res.send({clientSecret: session.client_secret});\n});\n\napp.get('/session-status', async (req, res) => {\n  const session = await stripe.checkout.sessions.retrieve(req.query.session_id);\n\n  res.send({\n    status: session.status,\n    customer_email: session.customer_details.email\n  });\n});\n\napp.listen(4242, () => console.log('Running on port 4242'));"],"mappings":"AAAA;AACA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAQ,CAAC,CAAC,6GAA6G,CAAC;AAC/I,MAAMC,OAAO,GAAGD,OAAO,CAAC,SAAS,CAAC;AAClC,MAAME,GAAG,GAAGD,OAAO,CAAC,CAAC;AACrBC,GAAG,CAACC,GAAG,CAACF,OAAO,CAACG,MAAM,CAAC,QAAQ,CAAC,CAAC;AAEjC,MAAMC,WAAW,GAAG,uBAAuB;AAE3CH,GAAG,CAACI,IAAI,CAAC,0BAA0B,EAAE,OAAOC,GAAG,EAAEC,GAAG,KAAK;EACvD,MAAMC,OAAO,GAAG,MAAMV,MAAM,CAACW,QAAQ,CAACC,QAAQ,CAACC,MAAM,CAAC;IACpDC,OAAO,EAAE,UAAU;IACnBC,UAAU,EAAE,CACV;MACE;MACAC,KAAK,EAAE,cAAc;MACrBC,QAAQ,EAAE;IACZ,CAAC,CACF;IACDC,IAAI,EAAE,SAAS;IACfC,UAAU,EAAG,GAAEb,WAAY;EAC7B,CAAC,CAAC;EAEFG,GAAG,CAACW,IAAI,CAAC;IAACC,YAAY,EAAEX,OAAO,CAACY;EAAa,CAAC,CAAC;AACjD,CAAC,CAAC;AAEFnB,GAAG,CAACoB,GAAG,CAAC,iBAAiB,EAAE,OAAOf,GAAG,EAAEC,GAAG,KAAK;EAC7C,MAAMC,OAAO,GAAG,MAAMV,MAAM,CAACW,QAAQ,CAACC,QAAQ,CAACY,QAAQ,CAAChB,GAAG,CAACiB,KAAK,CAACC,UAAU,CAAC;EAE7EjB,GAAG,CAACW,IAAI,CAAC;IACPO,MAAM,EAAEjB,OAAO,CAACiB,MAAM;IACtBC,cAAc,EAAElB,OAAO,CAACmB,gBAAgB,CAACC;EAC3C,CAAC,CAAC;AACJ,CAAC,CAAC;AAEF3B,GAAG,CAAC4B,MAAM,CAAC,IAAI,EAAE,MAAMC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}